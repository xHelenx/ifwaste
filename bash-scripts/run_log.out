Wed Jan 22 10:24:59 EST 2025

Lmod is automatically replacing "python/3.10" with "conda/24.7.1".

Experiment 1: 0 kids
Wed Jan 22 10:25:02 EST 2025
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
ARGS PATH: /home/haasehelen/haasehelen/ifwaste/bash-scripts/experiments/config_0k.json
/home/haasehelen/haasehelen/ifwaste/bash-scripts/experiments/config_0k.json
/blue/carpena/haasehelen/ifwaste/bash-scripts/experiments
Start run 0
/blue/carpena/haasehelen/ifwaste/bash-scripts/experiments
HH-18,HH-51,HH-55,HH-84,HH-94,HH-93,HH-90,HH-62,HH-63,HH-83,
HH-98,SP-6,HH-41,HH-89,HH-48,HH-87,HH-32,HH-64,HH-59,HH-73,
HH-54,HH-24,HH-69,HH-3,HH-96,SD-3,HH-21,SC-6,HH-75,HH-82,
HH-31,HH-97,SD-7,SD-2,HH-52,SC-9,HH-53,HH-77,HH-43,SP-10,
HH-79,HH-10,HH-20,HH-28,SP-4,HH-80,HH-22,HH-33,HH-16,SD-4,
HH-23,HH-65,HH-4,HH-68,SD-1,HH-92,HH-74,HH-0,HH-44,HH-81,
HH-85,HH-11,HH-60,HH-35,HH-88,SP-2,HH-56,HH-25,SC-12,HH-40,
HH-86,HH-7,HH-49,HH-45,HH-1,HH-26,HH-70,HH-76,HH-38,HH-34,
HH-37,HH-57,NO,HH-47,HH-71,HH-27,HH-19,HH-13,SD-5,SP-8,
HH-29,HH-72,HH-91,HH-42,SC-0,HH-95,HH-46,HH-36,SC-3,HH-66,
HH-39,HH-99,HH-15,HH-67,HH-12,HH-30,SP-0,HH-17,HH-58,HH-61,
HH-6,HH-50,HH-14,HH-2,HH-78,HH-8,HH-9,SD-0,SD-6,HH-5,

0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
Start run 1
HH-15,HH-31,HH-27,HH-67,HH-83,HH-96,SC-9,HH-97,HH-78,HH-71,
HH-43,HH-13,HH-1,HH-50,HH-48,HH-70,SP-8,HH-46,HH-17,HH-54,
SD-2,HH-39,HH-73,HH-59,HH-74,HH-84,HH-85,HH-38,HH-53,SP-10,
HH-2,HH-82,HH-8,HH-51,HH-14,HH-87,HH-92,HH-75,HH-3,SD-1,
SC-3,HH-23,HH-94,HH-69,HH-36,NO,HH-0,HH-89,HH-64,HH-10,
HH-62,HH-18,HH-29,HH-11,HH-40,SC-0,HH-41,SD-4,SP-4,HH-98,
HH-95,HH-86,HH-99,HH-44,SP-6,HH-81,HH-56,SD-5,HH-21,HH-45,
HH-25,HH-58,HH-16,HH-91,HH-24,HH-66,HH-19,SC-12,HH-93,HH-79,
SC-6,HH-42,HH-6,HH-72,HH-32,HH-65,HH-76,HH-37,HH-20,HH-63,
SD-7,HH-57,SP-0,SD-3,HH-7,HH-68,HH-55,HH-5,HH-35,HH-9,
HH-28,HH-26,SP-2,HH-80,HH-30,HH-88,SD-6,HH-34,HH-52,HH-61,
HH-12,HH-77,HH-4,HH-60,HH-49,HH-22,SD-0,HH-90,HH-47,HH-33,

0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
Start run 2
HH-80,HH-61,HH-52,HH-6,HH-59,HH-17,HH-87,HH-9,SP-4,HH-51,
HH-10,HH-28,HH-55,HH-8,SD-3,HH-32,HH-60,HH-91,HH-11,HH-97,
HH-56,HH-42,HH-16,HH-43,SP-6,HH-64,HH-54,HH-79,HH-73,HH-20,
SP-10,SD-5,HH-90,HH-40,HH-41,HH-72,HH-58,HH-63,HH-69,HH-47,
HH-95,HH-22,HH-67,HH-92,HH-66,HH-86,HH-23,HH-2,HH-45,SD-6,
HH-38,HH-65,HH-3,HH-89,HH-18,HH-27,HH-7,HH-96,HH-37,HH-15,
HH-30,SC-12,HH-29,SP-8,HH-12,HH-98,SP-2,HH-57,SC-9,HH-31,
HH-36,SD-7,HH-0,HH-19,HH-83,HH-68,HH-94,HH-74,HH-77,HH-21,
HH-13,HH-4,HH-44,HH-53,HH-35,HH-14,HH-62,HH-84,HH-85,SC-3,
HH-81,HH-46,HH-34,HH-76,HH-33,HH-48,HH-88,HH-49,NO,SD-0,
HH-39,SC-0,SD-2,HH-1,HH-75,HH-71,SD-1,HH-24,HH-99,HH-70,
SP-0,HH-82,SC-6,HH-78,HH-26,SD-4,HH-93,HH-50,HH-5,HH-25,

0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
Start run 3
HH-45,HH-20,HH-72,HH-73,HH-7,SC-3,HH-11,HH-80,HH-51,HH-68,
HH-52,HH-4,HH-28,HH-93,HH-69,SC-6,HH-56,HH-1,HH-96,HH-92,
HH-27,HH-18,HH-86,SD-2,SD-7,HH-59,HH-55,HH-67,HH-14,HH-76,
HH-61,HH-33,HH-64,SD-0,HH-41,HH-89,HH-36,HH-5,SD-4,HH-32,
HH-98,HH-91,HH-90,HH-81,HH-88,HH-31,HH-94,HH-16,SP-2,HH-54,
HH-30,HH-43,HH-60,HH-24,HH-6,HH-19,HH-44,HH-66,HH-75,SD-1,
HH-12,HH-21,HH-65,HH-71,HH-79,SD-3,HH-57,HH-82,SC-0,HH-85,
HH-17,HH-25,HH-87,HH-97,HH-13,HH-84,HH-3,HH-62,HH-47,HH-9,
HH-46,HH-58,HH-23,HH-29,SP-6,HH-95,HH-26,HH-48,HH-38,HH-10,
HH-70,HH-39,SP-8,NO,HH-37,HH-50,SC-12,HH-34,HH-0,HH-42,
SP-4,HH-78,HH-8,HH-35,SD-5,HH-2,SP-0,HH-53,HH-74,SP-10,
HH-63,HH-49,HH-22,HH-83,HH-99,SD-6,HH-15,HH-40,HH-77,SC-9,

0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
Start run 4
HH-3,HH-0,SP-2,HH-99,HH-46,HH-18,HH-58,HH-78,HH-82,HH-72,
HH-55,HH-77,SP-4,HH-90,HH-51,HH-69,SP-10,HH-74,HH-14,HH-86,
HH-48,SP-0,HH-6,HH-39,HH-88,HH-87,HH-45,SP-6,SC-3,HH-36,
HH-47,HH-32,HH-30,HH-10,SD-6,HH-20,HH-22,HH-24,HH-61,HH-81,
HH-23,SD-5,HH-52,HH-85,HH-49,HH-60,SD-4,SD-7,HH-54,SC-9,
HH-19,HH-95,HH-53,HH-50,HH-9,HH-89,HH-8,SD-3,HH-62,HH-5,
HH-44,HH-33,HH-13,HH-7,HH-43,NO,HH-4,HH-75,SD-2,HH-25,
HH-35,HH-91,HH-96,HH-68,HH-65,HH-76,HH-29,HH-28,SP-8,HH-27,
HH-79,HH-64,HH-83,HH-17,HH-11,SD-1,HH-56,SC-0,HH-21,HH-37,
HH-97,HH-42,HH-67,HH-98,HH-38,SC-6,HH-70,HH-73,HH-34,HH-66,
HH-92,HH-2,HH-59,HH-71,HH-93,SC-12,HH-15,SD-0,HH-26,HH-1,
HH-16,HH-63,HH-41,HH-40,HH-57,HH-80,HH-31,HH-12,HH-94,HH-84,

0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
Start run 5
HH-94,HH-50,HH-93,HH-29,HH-34,HH-49,HH-58,HH-90,HH-85,SD-3,
HH-69,HH-84,HH-11,HH-62,HH-19,HH-76,HH-51,HH-18,HH-1,SD-0,
SP-0,SP-4,HH-53,HH-75,HH-91,HH-6,HH-87,SC-6,SD-4,SD-2,
HH-21,HH-79,HH-33,HH-38,HH-8,HH-47,HH-5,HH-72,SC-12,HH-83,
HH-96,HH-86,HH-3,HH-13,HH-36,HH-40,HH-22,HH-59,HH-55,HH-14,
HH-65,HH-97,HH-16,SC-0,HH-41,SD-5,HH-9,HH-74,HH-42,HH-24,
HH-35,HH-81,SP-10,HH-73,HH-80,HH-66,HH-32,HH-28,HH-68,HH-78,
HH-56,HH-77,HH-57,HH-4,HH-7,HH-98,HH-45,HH-60,HH-43,HH-10,
SD-7,HH-12,HH-23,HH-99,HH-44,HH-48,HH-54,HH-64,HH-92,SP-2,
HH-25,HH-31,SP-6,SP-8,HH-20,HH-71,HH-63,HH-26,HH-46,HH-0,
HH-52,HH-39,HH-67,HH-15,SC-3,HH-88,HH-30,HH-27,HH-82,SD-6,
HH-17,SD-1,HH-37,HH-61,HH-2,SC-9,HH-89,HH-70,NO,HH-95,

0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
Start run 6
HH-85,SD-6,HH-5,HH-16,HH-66,NO,HH-75,SD-4,HH-22,HH-64,
SD-5,HH-69,HH-55,HH-25,HH-37,HH-27,HH-99,HH-0,HH-40,HH-74,
HH-36,SP-0,HH-79,HH-58,SP-8,HH-89,HH-42,HH-49,HH-18,HH-47,
HH-10,HH-4,HH-21,HH-60,HH-86,HH-92,HH-8,HH-31,HH-3,HH-33,
SC-0,HH-80,HH-41,HH-32,SP-4,HH-68,HH-38,HH-2,HH-91,HH-52,
SD-2,HH-48,HH-44,HH-95,HH-56,SD-1,HH-57,HH-97,HH-1,HH-39,
HH-46,HH-98,HH-81,HH-43,HH-17,SP-10,HH-78,HH-63,HH-82,HH-96,
HH-50,HH-59,HH-11,HH-71,HH-9,HH-34,HH-23,HH-26,HH-61,SD-0,
HH-87,HH-14,HH-54,HH-90,HH-84,HH-30,HH-51,HH-12,SC-9,HH-94,
HH-20,SD-7,HH-35,HH-62,HH-28,HH-13,HH-7,SP-6,HH-67,SC-3,
HH-72,HH-65,HH-70,HH-45,SC-6,HH-6,HH-76,SC-12,SP-2,HH-88,
HH-19,HH-93,HH-53,HH-77,HH-24,HH-73,HH-83,HH-15,SD-3,HH-29,

0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
Start run 7
HH-97,HH-47,HH-65,HH-74,HH-87,HH-11,HH-91,HH-73,HH-18,HH-96,
HH-35,HH-94,HH-75,HH-70,HH-2,HH-15,HH-4,HH-30,HH-53,HH-79,
HH-14,HH-78,SC-3,NO,SD-0,HH-1,HH-80,HH-88,HH-3,HH-62,
HH-63,HH-20,HH-28,HH-43,HH-6,HH-66,SD-1,SP-4,SP-2,HH-22,
HH-76,HH-67,SD-3,SD-5,HH-19,HH-10,HH-8,HH-89,SD-2,HH-16,
HH-85,HH-58,SC-12,HH-59,HH-41,HH-69,HH-99,HH-50,HH-83,HH-7,
SC-0,HH-57,HH-24,HH-54,SD-7,SC-6,HH-5,HH-23,SP-0,HH-51,
HH-90,HH-48,HH-33,HH-68,HH-64,HH-36,SC-9,HH-72,HH-12,HH-92,
SD-4,HH-93,HH-61,HH-38,HH-60,HH-34,HH-27,HH-52,HH-55,SP-8,
SD-6,HH-84,HH-26,HH-31,SP-10,HH-98,HH-39,HH-9,HH-0,HH-42,
HH-49,HH-56,HH-44,HH-40,SP-6,HH-21,HH-25,HH-81,HH-82,HH-29,
HH-71,HH-46,HH-37,HH-17,HH-77,HH-45,HH-95,HH-13,HH-86,HH-32,

0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
no sale type
Empty DataFrame
Columns: []
Index: []
no discount effect
Empty DataFrame
Columns: []
Index: []
Traceback (most recent call last):
  File "/home/haasehelen/haasehelen/ifwaste/model/main.py", line 38, in <module>
    main(args.config_path)
  File "/home/haasehelen/haasehelen/ifwaste/model/main.py", line 28, in main
    neighborhood.run(run_id=run)
  File "/blue/carpena/haasehelen/ifwaste/model/Neighborhood.py", line 66, in run
    house.do_a_day()
  File "/blue/carpena/haasehelen/ifwaste/model/Household.py", line 164, in do_a_day
    shopping_time = self.shoppingManager.shop(is_quickshop=False)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/blue/carpena/haasehelen/ifwaste/model/HouseholdShoppingManager.py", line 187, in shop
    self._handle_basket_adjustment(is_planner,basketCurator,selected_stores,budget, servings_to_buy_fg)                                            # type: ignore
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/blue/carpena/haasehelen/ifwaste/model/HouseholdShoppingManager.py", line 249, in _handle_basket_adjustment
    basketCurator.adjust_basket()
  File "/blue/carpena/haasehelen/ifwaste/model/BasketCurator.py", line 245, in adjust_basket
    self._organize_basket()
  File "/blue/carpena/haasehelen/ifwaste/model/BasketCurator.py", line 652, in _organize_basket
    self.basket.groupby(
  File "/blue/carpena/haasehelen/.conda/envs/ifwaste-env/lib/python3.12/site-packages/pandas/core/frame.py", line 9183, in groupby
    return DataFrameGroupBy(
           ^^^^^^^^^^^^^^^^^
  File "/blue/carpena/haasehelen/.conda/envs/ifwaste-env/lib/python3.12/site-packages/pandas/core/groupby/groupby.py", line 1329, in __init__
    grouper, exclusions, obj = get_grouper(
                               ^^^^^^^^^^^^
  File "/blue/carpena/haasehelen/.conda/envs/ifwaste-env/lib/python3.12/site-packages/pandas/core/groupby/grouper.py", line 1043, in get_grouper
    raise KeyError(gpr)
KeyError: 'type'
Wed Jan 22 14:29:34 EST 2025
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
ARGS PATH: /home/haasehelen/haasehelen/ifwaste/bash-scripts/experiments/config_2k.json
/home/haasehelen/haasehelen/ifwaste/bash-scripts/experiments/config_2k.json
/blue/carpena/haasehelen/ifwaste/bash-scripts/experiments
Start run 0
/blue/carpena/haasehelen/ifwaste/bash-scripts/experiments
SD-1,HH-70,HH-57,SD-0,HH-81,HH-26,HH-73,SP-4,SD-4,HH-79,
HH-63,SD-2,HH-92,HH-91,HH-29,HH-23,HH-5,SC-9,HH-11,SP-8,
HH-24,HH-76,HH-30,HH-40,HH-51,SP-10,SP-2,HH-85,HH-34,HH-58,
HH-61,HH-56,HH-31,HH-39,HH-35,HH-45,HH-80,HH-19,HH-44,HH-2,
HH-67,HH-65,HH-69,HH-15,SC-3,HH-87,HH-89,HH-47,HH-25,HH-84,
HH-97,HH-3,HH-59,HH-38,HH-33,HH-43,HH-68,HH-96,HH-72,HH-8,
HH-54,HH-99,HH-55,HH-6,HH-52,HH-48,HH-22,HH-53,HH-62,HH-66,
HH-36,HH-74,HH-95,HH-27,SC-6,HH-98,HH-42,HH-10,HH-93,HH-83,
HH-14,SP-0,NO,SD-5,HH-88,HH-50,HH-7,SD-3,HH-17,SP-6,
HH-94,HH-78,HH-16,HH-1,SC-0,SC-12,HH-4,HH-86,HH-0,HH-71,
HH-75,HH-32,HH-12,HH-60,HH-64,HH-90,HH-21,HH-18,HH-37,HH-41,
SD-6,SD-7,HH-9,HH-49,HH-82,HH-13,HH-46,HH-20,HH-28,HH-77,

0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
Start run 1
HH-72,HH-58,SC-6,HH-60,HH-79,SD-3,HH-48,HH-65,SD-6,NO,
HH-56,HH-44,HH-33,HH-40,HH-0,HH-37,HH-17,HH-89,HH-68,HH-36,
HH-22,HH-7,HH-70,HH-91,HH-88,HH-52,HH-97,HH-46,HH-29,SC-12,
HH-24,SD-4,SP-10,HH-94,HH-19,HH-4,HH-67,HH-31,SC-3,HH-61,
HH-1,HH-59,HH-74,SP-8,HH-92,HH-27,HH-75,HH-25,HH-30,HH-20,
HH-77,HH-51,HH-54,HH-35,SP-0,SC-9,HH-87,HH-28,HH-50,HH-12,
HH-53,HH-38,HH-23,SD-2,HH-10,HH-15,HH-82,HH-93,SP-2,HH-18,
HH-34,HH-55,HH-45,HH-84,HH-16,HH-71,HH-5,HH-3,HH-69,SP-4,
HH-39,HH-8,SD-7,HH-43,HH-14,HH-9,HH-41,SC-0,HH-98,HH-76,
HH-81,HH-49,HH-2,HH-11,HH-63,SP-6,HH-96,HH-64,HH-21,HH-47,
HH-90,HH-57,HH-78,HH-13,HH-62,SD-1,HH-99,HH-83,HH-6,HH-66,
HH-85,HH-73,HH-42,HH-95,HH-86,HH-80,SD-5,HH-26,HH-32,SD-0,

0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
Start run 2
SC-9,HH-63,HH-79,HH-4,SP-8,HH-68,HH-20,HH-33,HH-16,HH-75,
SD-6,HH-80,SD-1,HH-36,HH-94,HH-54,HH-69,HH-44,HH-10,HH-89,
HH-18,HH-29,HH-6,HH-13,HH-85,HH-57,HH-27,HH-39,SP-2,HH-53,
HH-15,HH-66,HH-84,HH-40,HH-41,HH-49,HH-17,HH-22,HH-19,HH-82,
SD-5,HH-45,HH-93,HH-35,HH-31,HH-59,SP-0,HH-51,HH-95,HH-64,
HH-50,SC-6,HH-77,HH-8,HH-78,HH-99,HH-24,HH-12,HH-7,HH-72,
HH-28,HH-92,HH-81,SP-4,SC-0,SP-6,SC-3,HH-38,HH-71,HH-21,
HH-5,HH-47,HH-91,HH-56,SP-10,SD-4,HH-90,SD-2,HH-60,HH-67,
HH-86,HH-11,HH-58,HH-46,HH-14,HH-42,HH-23,HH-0,HH-25,HH-83,
HH-73,HH-9,HH-96,HH-30,HH-98,SD-7,HH-34,HH-65,HH-1,HH-62,
SD-3,HH-61,HH-55,NO,HH-2,HH-74,HH-87,SC-12,HH-37,HH-52,
HH-48,HH-76,HH-88,SD-0,HH-3,HH-32,HH-43,HH-26,HH-70,HH-97,

0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
Start run 3
SP-2,SP-10,HH-76,HH-58,HH-80,HH-21,HH-60,SD-5,HH-61,SC-9,
HH-14,SP-6,HH-79,HH-16,HH-95,SC-6,HH-91,HH-27,HH-81,HH-47,
SC-0,SD-7,NO,SD-4,HH-24,SP-4,HH-12,HH-75,HH-87,HH-25,
HH-7,HH-53,HH-98,HH-17,HH-9,HH-37,HH-10,HH-26,HH-66,HH-94,
HH-69,HH-23,HH-74,HH-51,HH-77,HH-48,HH-31,HH-0,HH-28,SP-0,
HH-89,HH-44,HH-59,HH-33,HH-88,HH-78,HH-39,SC-3,HH-40,HH-34,
HH-54,SD-0,SD-3,HH-64,HH-90,HH-72,HH-1,HH-29,HH-86,HH-42,
HH-92,HH-15,HH-8,HH-19,HH-36,HH-82,SD-2,HH-46,HH-43,HH-67,
HH-18,HH-52,HH-32,HH-85,HH-57,SC-12,HH-4,HH-13,HH-35,HH-3,
HH-84,HH-50,HH-49,HH-96,HH-70,SD-6,HH-2,SD-1,HH-5,HH-68,
HH-83,HH-56,HH-62,HH-63,HH-30,HH-97,SP-8,HH-22,HH-45,HH-55,
HH-71,HH-38,HH-73,HH-99,HH-20,HH-93,HH-11,HH-6,HH-65,HH-41,

0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
Start run 4
SP-4,HH-65,HH-22,HH-49,HH-85,HH-91,SC-0,HH-87,SD-3,HH-8,
HH-32,HH-66,SP-8,SD-4,HH-4,HH-28,HH-44,HH-77,HH-35,HH-56,
HH-23,HH-9,HH-46,HH-67,HH-74,HH-42,HH-84,HH-7,SD-5,HH-13,
HH-45,HH-97,HH-59,HH-61,HH-79,HH-81,HH-29,SD-7,HH-83,HH-68,
HH-54,SC-12,SP-0,HH-47,HH-26,HH-48,HH-27,HH-40,HH-86,HH-94,
HH-72,HH-80,HH-52,HH-93,HH-41,SD-0,HH-50,HH-2,HH-92,HH-24,
HH-62,HH-20,HH-6,HH-78,HH-96,HH-16,HH-88,HH-3,HH-30,HH-37,
HH-82,SC-6,HH-25,HH-58,HH-57,HH-18,HH-76,HH-90,HH-39,SD-6,
HH-55,HH-53,HH-5,HH-70,HH-71,HH-11,HH-95,HH-15,HH-34,HH-10,
HH-31,HH-75,NO,HH-1,SC-9,HH-60,HH-51,HH-36,HH-64,SD-1,
HH-38,HH-73,HH-0,HH-33,HH-99,HH-21,SP-6,HH-98,HH-17,HH-19,
HH-69,SC-3,HH-89,HH-43,HH-63,SP-2,SD-2,HH-12,HH-14,SP-10,

0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
Start run 5
HH-53,SD-3,HH-76,HH-32,HH-20,HH-95,HH-10,HH-42,HH-34,HH-72,
HH-67,HH-69,HH-70,HH-92,HH-17,HH-82,HH-99,HH-81,HH-28,HH-85,
HH-27,HH-47,SD-1,SP-2,HH-52,HH-38,HH-56,SP-8,HH-79,HH-84,
HH-5,HH-65,SD-4,HH-71,HH-96,HH-80,HH-91,HH-89,HH-45,HH-59,
HH-61,HH-12,HH-98,HH-35,HH-39,HH-15,HH-41,HH-77,HH-11,HH-30,
SD-7,HH-83,HH-13,SP-10,HH-88,HH-25,SD-5,SC-3,HH-36,HH-90,
HH-24,HH-0,HH-43,HH-93,HH-51,SC-0,HH-78,NO,HH-62,HH-46,
HH-48,SP-0,HH-7,HH-87,HH-29,HH-14,HH-57,HH-23,SC-9,HH-16,
HH-44,HH-64,SP-6,HH-6,HH-19,HH-37,SD-2,HH-18,HH-40,HH-2,
HH-22,HH-26,HH-97,SP-4,HH-86,SC-12,HH-66,HH-3,HH-73,HH-31,
HH-4,SD-6,HH-94,HH-68,HH-50,HH-1,HH-33,HH-9,HH-8,HH-21,
HH-75,HH-54,HH-60,HH-49,SC-6,SD-0,HH-55,HH-74,HH-58,HH-63,

0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
Start run 6
HH-26,HH-31,HH-55,HH-2,HH-42,SD-0,HH-36,HH-19,HH-5,HH-40,
HH-8,HH-9,SC-3,HH-10,HH-97,HH-49,HH-82,HH-94,SP-8,HH-81,
HH-4,HH-39,HH-37,HH-45,HH-60,HH-25,HH-43,HH-34,HH-29,HH-63,
HH-62,HH-65,HH-84,SD-2,HH-14,HH-16,HH-32,SC-6,HH-20,HH-47,
HH-21,SD-4,SD-3,HH-92,HH-79,HH-73,HH-52,HH-67,HH-0,HH-17,
HH-23,HH-58,HH-53,HH-76,HH-41,HH-59,HH-12,HH-93,NO,HH-74,
HH-85,SP-2,HH-75,HH-50,HH-13,HH-71,HH-95,HH-18,HH-72,HH-48,
SP-6,HH-91,HH-6,HH-99,HH-90,HH-46,SD-6,HH-3,SC-12,HH-33,
HH-80,HH-78,SC-9,HH-56,HH-69,HH-7,SP-0,HH-86,SD-7,HH-66,
SD-5,HH-11,HH-1,HH-27,SP-10,HH-70,HH-96,HH-89,HH-68,HH-64,
HH-57,HH-22,HH-51,SD-1,HH-24,HH-77,HH-38,HH-98,HH-54,HH-61,
HH-28,SP-4,HH-83,HH-88,HH-87,HH-44,SC-0,HH-15,HH-35,HH-30,

0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
Start run 7
HH-12,HH-11,HH-15,SC-0,SC-6,HH-57,HH-41,HH-45,HH-0,HH-84,
HH-76,HH-64,HH-65,HH-88,HH-20,HH-69,HH-81,HH-59,HH-36,HH-3,
HH-60,HH-18,HH-72,HH-86,HH-25,HH-82,HH-52,HH-21,HH-92,SD-1,
HH-44,HH-23,HH-94,HH-80,HH-19,SP-10,HH-39,HH-38,HH-54,HH-89,
SD-0,HH-68,HH-35,HH-78,HH-56,SC-12,HH-33,HH-79,HH-27,SP-4,
HH-98,HH-37,HH-70,HH-48,HH-62,HH-71,SD-7,HH-10,HH-49,HH-50,
HH-67,HH-13,SD-3,HH-17,SD-6,HH-9,HH-51,SP-2,HH-53,HH-4,
HH-7,SP-8,HH-97,HH-43,HH-73,HH-2,HH-55,HH-74,HH-42,HH-83,
HH-16,HH-96,HH-40,HH-24,HH-63,HH-26,HH-58,HH-90,SD-4,HH-46,
HH-5,HH-8,HH-66,SP-0,HH-1,HH-29,HH-32,HH-91,SD-2,HH-28,
SC-9,SD-5,HH-85,HH-31,NO,HH-47,HH-30,HH-14,HH-77,SP-6,
HH-6,HH-93,HH-95,HH-61,HH-99,HH-87,HH-34,HH-75,HH-22,SC-3,

0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
Start run 8
NO,HH-3,HH-88,HH-64,HH-32,HH-1,HH-95,HH-42,HH-47,HH-97,
HH-44,HH-80,HH-98,HH-36,HH-76,HH-78,HH-99,SD-6,HH-87,HH-52,
SC-3,SD-7,SP-8,HH-5,HH-15,HH-13,SC-12,HH-65,HH-37,HH-91,
HH-7,HH-62,HH-14,HH-38,HH-70,SP-0,HH-18,HH-27,HH-69,HH-67,
HH-17,SC-6,HH-59,HH-84,HH-74,HH-45,HH-20,HH-93,HH-83,HH-94,
SC-9,SC-0,HH-23,HH-81,HH-39,HH-8,HH-19,SD-0,HH-73,HH-85,
HH-9,SD-4,HH-11,HH-0,HH-58,SP-10,HH-31,HH-92,HH-35,HH-90,
HH-28,HH-40,HH-16,HH-79,HH-33,HH-25,HH-72,HH-53,HH-54,HH-6,
SP-6,SP-2,HH-56,HH-2,HH-43,HH-34,HH-24,HH-10,HH-68,SP-4,
HH-51,HH-30,HH-48,SD-1,HH-55,HH-96,HH-26,HH-57,HH-61,HH-4,
HH-71,HH-60,SD-3,HH-75,HH-66,SD-5,HH-77,HH-63,HH-41,HH-46,
SD-2,HH-22,HH-50,HH-82,HH-12,HH-49,HH-89,HH-21,HH-86,HH-29,

0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
Start run 9
HH-94,HH-52,HH-39,HH-63,HH-25,HH-34,HH-37,HH-3,HH-47,SP-2,
HH-57,HH-28,SD-0,HH-58,HH-40,HH-12,HH-16,SP-8,HH-44,HH-41,
HH-72,HH-93,HH-49,HH-92,HH-1,HH-66,HH-30,HH-53,HH-56,HH-79,
HH-80,HH-48,SD-4,SP-6,HH-20,HH-36,HH-17,HH-4,SD-3,HH-82,
HH-35,SC-6,HH-87,HH-10,HH-6,HH-98,HH-60,SD-6,HH-45,HH-97,
HH-67,HH-73,HH-38,HH-99,SP-10,HH-27,HH-13,HH-76,HH-61,HH-23,
HH-8,HH-0,SD-2,SP-0,HH-55,HH-43,HH-15,HH-33,HH-88,HH-81,
HH-31,HH-70,SC-12,HH-75,HH-29,HH-19,HH-2,SD-1,SD-7,HH-65,
SC-9,HH-5,HH-74,HH-89,HH-14,SD-5,NO,HH-85,HH-96,HH-62,
HH-77,HH-42,SC-3,HH-84,HH-59,HH-51,HH-71,SC-0,HH-32,HH-18,
HH-69,HH-91,HH-86,HH-68,HH-83,HH-9,HH-11,HH-21,HH-46,HH-64,
HH-7,HH-22,HH-54,HH-78,SP-4,HH-50,HH-90,HH-95,HH-24,HH-26,

0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
Wed Jan 22 16:48:16 EST 2025
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
ARGS PATH: /home/haasehelen/haasehelen/ifwaste/bash-scripts/experiments/config_4k.json
/home/haasehelen/haasehelen/ifwaste/bash-scripts/experiments/config_4k.json
/blue/carpena/haasehelen/ifwaste/bash-scripts/experiments
Start run 0
/blue/carpena/haasehelen/ifwaste/bash-scripts/experiments
HH-39,HH-9,HH-11,SD-7,SP-10,HH-33,HH-22,HH-19,HH-43,HH-8,
HH-89,HH-86,HH-21,HH-64,HH-57,HH-3,SD-4,HH-88,HH-45,HH-75,
SC-6,HH-99,HH-98,HH-83,HH-4,HH-34,HH-44,HH-18,HH-63,HH-79,
HH-27,HH-94,HH-54,HH-61,SD-6,HH-58,HH-23,HH-91,HH-74,HH-85,
HH-84,HH-42,HH-48,HH-51,HH-6,HH-1,SD-2,HH-35,HH-10,HH-60,
HH-26,SP-2,HH-82,HH-46,HH-97,HH-13,HH-16,HH-30,HH-29,HH-28,
HH-81,HH-41,HH-31,HH-59,HH-93,HH-78,HH-55,HH-76,HH-68,HH-71,
HH-96,HH-50,SP-4,HH-69,HH-66,HH-52,HH-5,HH-15,HH-95,SC-9,
SD-5,HH-38,HH-2,HH-25,HH-92,HH-65,SC-12,HH-32,HH-77,HH-90,
HH-24,SP-0,HH-37,SC-0,SD-3,HH-40,SC-3,SD-0,HH-7,HH-47,
HH-36,HH-67,HH-73,SP-6,HH-80,SD-1,HH-62,HH-72,HH-20,SP-8,
HH-0,HH-70,HH-87,HH-53,HH-56,HH-49,HH-14,HH-17,HH-12,NO,

0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
Start run 1
HH-22,HH-88,SP-2,HH-37,HH-36,HH-9,HH-97,HH-0,HH-12,HH-94,
HH-31,SP-8,HH-35,SC-9,HH-71,HH-72,SC-3,HH-98,HH-82,HH-23,
HH-66,HH-41,SC-6,HH-18,HH-64,HH-91,HH-42,HH-77,HH-74,HH-70,
HH-30,HH-48,SP-4,HH-33,HH-83,SC-12,HH-65,HH-51,HH-4,HH-46,
SD-4,SP-10,HH-56,HH-10,SD-2,HH-28,HH-49,HH-38,SC-0,HH-92,
HH-43,HH-67,HH-80,HH-90,HH-60,HH-53,HH-84,HH-68,HH-61,HH-32,
HH-75,HH-17,SD-6,HH-1,SP-0,HH-8,HH-99,HH-15,HH-50,HH-57,
HH-5,SD-3,HH-93,HH-47,HH-79,HH-34,HH-69,NO,HH-52,HH-87,
HH-59,HH-95,HH-85,HH-11,HH-58,SD-7,HH-14,HH-29,HH-73,HH-26,
HH-62,HH-76,HH-13,SP-6,HH-39,SD-0,HH-81,HH-16,SD-5,HH-45,
SD-1,HH-27,HH-89,HH-44,HH-55,HH-21,HH-78,HH-19,HH-86,HH-7,
HH-2,HH-96,HH-40,HH-6,HH-20,HH-3,HH-54,HH-63,HH-25,HH-24,

0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
Start run 2
HH-66,HH-9,SD-3,HH-56,HH-7,HH-26,HH-47,HH-25,HH-91,HH-99,
SC-9,HH-65,HH-39,HH-54,SD-4,HH-94,HH-46,SD-0,HH-73,HH-81,
SP-8,HH-14,HH-18,HH-16,HH-42,HH-40,HH-10,HH-79,HH-50,HH-35,
SP-4,HH-28,HH-89,HH-41,HH-27,HH-12,HH-86,SD-6,HH-93,HH-74,
HH-55,HH-59,HH-3,SP-6,HH-5,HH-49,HH-70,SD-5,HH-8,HH-23,
HH-92,HH-38,SD-7,HH-44,HH-2,HH-97,HH-36,HH-0,SC-3,HH-71,
SC-6,HH-75,HH-87,HH-6,SD-1,HH-95,HH-34,HH-62,HH-29,HH-32,
HH-1,HH-37,HH-21,HH-96,SC-12,HH-57,HH-60,SP-10,HH-64,HH-69,
SP-0,SD-2,HH-17,HH-45,HH-11,HH-22,HH-52,HH-82,SP-2,HH-77,
HH-58,HH-85,HH-84,HH-31,HH-63,HH-83,HH-61,HH-30,HH-20,HH-48,
HH-24,SC-0,HH-51,HH-72,HH-98,HH-53,HH-15,HH-67,HH-80,HH-19,
HH-76,HH-33,HH-13,NO,HH-88,HH-68,HH-90,HH-43,HH-78,HH-4,

0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
Start run 3
SD-5,HH-71,HH-56,HH-59,HH-0,HH-37,HH-58,HH-79,HH-18,HH-54,
SP-10,HH-16,HH-32,HH-24,HH-48,SP-0,HH-73,HH-65,HH-89,HH-98,
HH-1,HH-91,HH-2,HH-88,HH-92,HH-61,HH-62,HH-46,SC-12,SC-0,
HH-23,SP-8,HH-29,SD-4,HH-33,HH-13,HH-9,HH-20,HH-19,HH-60,
HH-52,SD-1,HH-43,HH-47,HH-78,HH-30,HH-76,HH-7,HH-15,HH-99,
SC-6,SC-3,SD-7,HH-66,HH-93,HH-72,HH-51,HH-45,HH-21,HH-27,
HH-28,SD-3,HH-83,HH-8,HH-82,SD-6,HH-38,HH-87,HH-55,SD-0,
HH-35,HH-84,HH-36,HH-85,HH-25,HH-5,SP-2,HH-17,HH-86,HH-75,
HH-14,HH-3,HH-22,HH-39,HH-12,HH-10,HH-11,HH-34,HH-53,SP-4,
HH-31,HH-95,HH-90,HH-6,HH-41,NO,HH-63,HH-57,HH-70,SP-6,
SC-9,HH-77,HH-94,HH-64,HH-81,HH-26,HH-67,HH-4,HH-80,HH-69,
HH-74,HH-97,SD-2,HH-44,HH-42,HH-49,HH-50,HH-40,HH-96,HH-68,

0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
Start run 4
SD-5,HH-98,SC-3,HH-14,HH-81,HH-82,HH-22,HH-15,SD-0,HH-0,
HH-59,HH-91,HH-86,HH-48,HH-35,HH-72,HH-23,SP-2,HH-88,HH-6,
HH-75,HH-1,HH-77,HH-53,HH-50,SD-1,HH-61,HH-10,HH-60,HH-20,
HH-51,HH-17,HH-27,HH-4,HH-41,HH-87,HH-31,HH-56,HH-80,HH-2,
HH-25,HH-73,SD-7,HH-34,HH-28,SD-2,HH-44,HH-90,NO,HH-97,
HH-3,SC-9,HH-58,HH-49,HH-79,HH-47,HH-26,HH-66,SP-4,HH-7,
SD-4,HH-76,HH-16,HH-68,HH-95,HH-45,HH-38,HH-64,HH-71,HH-9,
HH-96,SC-0,HH-8,SD-6,HH-21,HH-36,HH-67,HH-93,HH-52,SP-10,
HH-39,HH-24,HH-11,HH-63,HH-37,SC-6,HH-46,SC-12,SP-6,SP-0,
HH-99,HH-30,HH-57,HH-89,HH-43,HH-74,HH-62,HH-92,HH-29,SP-8,
HH-12,HH-94,HH-40,HH-33,HH-85,HH-19,HH-83,HH-54,HH-78,HH-69,
HH-18,HH-65,HH-32,HH-13,HH-5,HH-42,HH-55,SD-3,HH-84,HH-70,

0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
Start run 5
HH-41,HH-1,HH-19,HH-82,HH-49,HH-35,HH-30,SP-8,SP-0,HH-5,
HH-71,HH-10,HH-59,HH-12,HH-9,SP-4,SC-12,HH-2,HH-92,SP-10,
HH-16,SD-7,HH-80,HH-91,HH-66,HH-54,HH-45,HH-57,HH-69,HH-25,
HH-86,HH-39,HH-37,HH-47,HH-63,HH-62,HH-79,HH-3,HH-8,HH-15,
HH-32,HH-22,HH-44,SC-3,HH-24,HH-84,HH-38,SP-6,HH-28,HH-65,
HH-72,HH-56,HH-29,HH-55,HH-83,HH-85,HH-93,HH-90,HH-68,HH-46,
HH-76,HH-99,HH-18,HH-51,HH-94,HH-31,HH-77,HH-0,HH-23,HH-40,
HH-58,HH-26,HH-7,HH-67,SD-1,HH-61,SP-2,HH-70,HH-33,HH-98,
HH-27,SD-0,HH-20,HH-17,SD-2,SD-3,NO,HH-52,HH-48,HH-43,
HH-73,HH-50,SD-6,HH-96,HH-11,HH-74,HH-95,HH-34,HH-88,HH-87,
SD-5,SC-0,HH-97,HH-81,HH-42,HH-6,SD-4,HH-89,HH-60,HH-78,
SC-6,SC-9,HH-53,HH-13,HH-4,HH-75,HH-14,HH-21,HH-36,HH-64,

0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
Start run 6
HH-67,HH-82,HH-99,HH-83,SD-5,HH-40,HH-45,SD-1,HH-87,HH-95,
HH-9,SC-0,HH-64,HH-44,HH-35,SD-2,SD-3,HH-74,HH-58,HH-94,
HH-89,HH-75,HH-10,HH-70,HH-86,HH-12,SP-6,SC-12,HH-19,HH-79,
HH-22,HH-0,HH-2,HH-3,HH-61,SP-2,HH-1,HH-84,HH-91,HH-18,
HH-81,HH-30,SP-10,HH-53,HH-43,HH-50,HH-93,HH-36,HH-85,HH-46,
SC-9,HH-39,HH-72,HH-48,SC-3,HH-16,HH-57,HH-41,SD-4,HH-31,
HH-76,HH-47,HH-88,HH-38,HH-98,HH-54,HH-59,HH-71,HH-80,HH-14,
HH-4,HH-73,SP-0,SD-6,HH-17,HH-56,HH-69,HH-29,HH-66,HH-32,
HH-26,HH-24,HH-34,HH-33,HH-8,SD-0,HH-68,HH-77,HH-20,SP-8,
HH-25,SD-7,HH-42,HH-62,HH-7,HH-97,SC-6,HH-5,HH-96,HH-78,
HH-65,HH-15,HH-51,HH-49,SP-4,HH-52,HH-63,HH-28,HH-55,NO,
HH-13,HH-6,HH-90,HH-92,HH-27,HH-21,HH-37,HH-11,HH-60,HH-23,

0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
Start run 7
HH-98,HH-85,HH-16,HH-86,SD-5,HH-50,HH-78,HH-43,HH-38,HH-94,
HH-80,HH-73,HH-4,SP-4,HH-65,HH-35,HH-76,SD-0,HH-75,HH-2,
HH-55,HH-42,SD-4,HH-92,HH-56,SD-1,NO,HH-58,HH-87,HH-28,
HH-18,HH-17,HH-62,HH-60,HH-37,HH-23,HH-48,HH-54,HH-14,HH-0,
HH-52,HH-39,HH-67,HH-79,HH-59,HH-96,HH-30,HH-81,HH-90,HH-22,
HH-26,HH-88,HH-15,HH-82,HH-83,HH-24,HH-11,HH-29,HH-27,HH-31,
HH-20,SC-9,HH-57,HH-13,SP-8,HH-70,HH-34,HH-41,HH-9,HH-8,
HH-5,HH-64,HH-49,SD-3,HH-1,HH-25,HH-45,HH-69,HH-10,HH-51,
HH-99,SP-0,SC-0,HH-3,SP-2,HH-66,SC-3,HH-95,SD-2,HH-44,
HH-33,SC-12,SD-6,HH-72,HH-74,HH-89,HH-93,HH-91,HH-84,SC-6,
HH-77,HH-21,HH-32,HH-40,SP-10,HH-36,SP-6,SD-7,HH-63,HH-71,
HH-68,HH-53,HH-97,HH-7,HH-47,HH-12,HH-19,HH-61,HH-6,HH-46,

0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
Start run 8
HH-4,HH-43,SD-2,SD-7,HH-0,HH-98,HH-91,HH-23,HH-35,HH-42,
SP-8,HH-24,HH-15,SD-1,HH-74,SD-0,HH-63,HH-19,HH-9,HH-92,
HH-18,HH-78,HH-94,HH-46,SD-3,HH-99,HH-47,NO,HH-44,HH-67,
HH-11,HH-16,HH-30,HH-14,HH-21,HH-17,HH-61,HH-69,HH-82,HH-72,
HH-2,SC-9,HH-84,HH-36,HH-38,HH-52,HH-60,HH-79,HH-62,SC-3,
HH-6,HH-41,HH-57,HH-1,HH-10,SD-4,HH-49,HH-59,HH-12,HH-29,
HH-37,HH-7,HH-40,HH-31,HH-22,HH-32,HH-96,HH-81,HH-86,HH-83,
HH-88,HH-55,SD-6,SP-0,HH-33,HH-77,HH-87,HH-65,SP-2,HH-56,
HH-51,HH-97,HH-28,HH-54,HH-75,HH-64,HH-3,HH-71,HH-13,HH-8,
HH-66,HH-89,HH-45,SP-6,HH-25,HH-27,SP-4,HH-80,SC-0,HH-53,
SC-6,HH-85,HH-93,SC-12,HH-5,HH-20,HH-50,HH-48,HH-34,HH-95,
HH-39,HH-73,SP-10,HH-68,HH-26,SD-5,HH-90,HH-76,HH-58,HH-70,

0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
Start run 9
HH-99,HH-52,SP-0,SD-1,HH-77,SP-2,HH-23,HH-14,HH-57,HH-19,
HH-33,HH-98,HH-81,HH-38,HH-13,HH-92,HH-41,HH-70,HH-15,HH-9,
SP-8,SD-0,HH-90,HH-80,HH-87,SD-4,HH-46,HH-50,HH-42,HH-43,
HH-76,HH-34,HH-7,HH-64,HH-69,HH-10,SC-3,HH-75,HH-36,HH-11,
HH-20,HH-44,HH-26,HH-4,HH-40,HH-8,HH-5,HH-65,HH-88,HH-86,
HH-97,HH-94,HH-37,HH-82,HH-93,HH-27,HH-18,HH-31,SC-0,HH-72,
HH-89,HH-29,HH-58,HH-95,HH-30,HH-24,HH-84,HH-66,HH-47,HH-49,
HH-54,SC-6,SD-6,HH-96,HH-48,HH-1,HH-63,HH-25,HH-3,HH-0,
HH-51,HH-61,HH-12,HH-21,SD-3,HH-22,HH-39,HH-6,HH-74,HH-16,
HH-83,HH-60,SD-2,SD-7,HH-17,HH-35,HH-56,HH-62,SD-5,HH-91,
SP-10,HH-59,HH-79,HH-73,HH-67,SP-6,NO,HH-68,SC-9,HH-78,
SC-12,SP-4,HH-85,HH-2,HH-32,HH-45,HH-71,HH-55,HH-53,HH-28,

0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
Wed Jan 22 18:08:11 EST 2025
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
ARGS PATH: /home/haasehelen/haasehelen/ifwaste/bash-scripts/experiments/config_6k.json
/home/haasehelen/haasehelen/ifwaste/bash-scripts/experiments/config_6k.json
/blue/carpena/haasehelen/ifwaste/bash-scripts/experiments
Start run 0
/blue/carpena/haasehelen/ifwaste/bash-scripts/experiments
HH-92,HH-58,HH-80,HH-71,HH-83,HH-20,HH-51,HH-10,HH-96,HH-32,
SD-5,HH-57,HH-31,HH-79,HH-8,SP-8,HH-59,HH-94,HH-52,HH-46,
SP-0,HH-87,SD-6,HH-30,SC-0,SD-7,HH-11,HH-0,HH-84,SD-1,
HH-47,HH-72,SD-2,HH-70,HH-3,HH-13,HH-90,HH-44,HH-78,HH-18,
HH-2,HH-33,HH-43,HH-34,HH-36,HH-28,HH-69,HH-85,HH-14,HH-50,
HH-29,SC-9,HH-24,HH-48,HH-97,SD-3,HH-4,HH-75,HH-21,HH-22,
HH-41,SD-0,HH-49,HH-26,HH-17,HH-23,HH-38,SD-4,HH-61,HH-56,
HH-54,HH-91,HH-74,HH-65,HH-40,SC-12,HH-73,SP-2,HH-93,HH-99,
HH-95,HH-62,HH-53,HH-86,HH-88,HH-82,HH-6,HH-19,HH-5,HH-35,
HH-12,HH-16,NO,SC-3,HH-76,HH-81,HH-89,SP-10,HH-64,HH-42,
HH-39,SP-6,HH-55,HH-27,HH-9,HH-25,HH-60,HH-1,HH-15,HH-68,
HH-67,HH-7,SP-4,HH-98,HH-45,HH-66,HH-37,HH-63,SC-6,HH-77,

0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
Start run 1
HH-27,HH-37,HH-12,HH-56,HH-44,HH-64,HH-16,HH-57,HH-92,HH-0,
HH-98,HH-5,HH-59,HH-39,HH-77,HH-76,SD-1,HH-72,HH-81,HH-10,
HH-79,HH-58,HH-80,HH-31,HH-4,HH-73,HH-60,HH-78,HH-99,SP-10,
SC-9,HH-42,HH-89,HH-69,HH-17,HH-30,HH-75,HH-49,NO,HH-35,
HH-11,HH-62,SD-3,HH-95,HH-85,HH-47,HH-83,SP-8,HH-48,HH-74,
HH-23,SD-4,HH-70,HH-67,HH-54,HH-43,HH-40,HH-86,HH-63,HH-84,
SC-3,SC-12,HH-1,HH-7,HH-96,HH-65,SD-6,HH-6,HH-24,SP-2,
HH-34,HH-51,HH-21,HH-26,SD-0,HH-19,HH-2,HH-18,SP-4,HH-71,
HH-45,HH-90,HH-46,HH-14,HH-97,HH-91,HH-82,HH-25,SC-0,HH-53,
HH-15,HH-9,HH-20,HH-13,HH-29,HH-94,HH-41,HH-50,HH-36,HH-93,
SD-2,HH-68,HH-28,SD-5,HH-66,HH-38,HH-3,SC-6,HH-52,HH-55,
SP-6,HH-88,SD-7,HH-87,HH-61,HH-22,HH-8,HH-33,SP-0,HH-32,

0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
Start run 2
HH-58,HH-18,SP-0,SP-2,HH-64,HH-19,HH-35,HH-11,SP-10,HH-80,
HH-54,HH-77,HH-44,SP-4,HH-82,HH-21,HH-96,HH-56,HH-28,HH-42,
HH-9,HH-84,HH-43,HH-51,HH-63,HH-10,HH-7,HH-76,HH-27,HH-53,
SD-7,HH-62,HH-37,SD-0,SD-1,HH-17,HH-59,HH-0,HH-70,HH-72,
HH-3,HH-45,HH-47,HH-23,HH-61,HH-93,HH-68,HH-20,HH-49,HH-97,
NO,HH-6,HH-83,HH-66,HH-60,HH-79,HH-99,HH-31,HH-85,HH-55,
SC-9,HH-4,HH-48,HH-98,HH-57,HH-81,HH-86,HH-87,HH-41,SD-3,
HH-71,HH-65,SP-8,HH-73,SD-2,HH-5,HH-25,HH-30,HH-95,HH-13,
HH-34,HH-52,HH-89,SC-12,HH-15,HH-1,HH-12,HH-75,HH-8,HH-14,
HH-94,HH-2,HH-33,SD-6,HH-74,HH-38,HH-26,HH-40,HH-91,HH-50,
HH-32,HH-67,HH-39,HH-36,SC-6,SD-4,HH-29,HH-16,SP-6,HH-22,
SC-3,SC-0,HH-78,SD-5,HH-69,HH-90,HH-24,HH-92,HH-88,HH-46,

0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
Start run 3
HH-22,HH-8,HH-30,HH-7,HH-72,HH-52,HH-19,HH-11,HH-96,HH-54,
HH-62,HH-89,HH-88,HH-63,HH-38,HH-1,HH-20,HH-90,HH-70,HH-33,
HH-5,HH-17,HH-43,HH-35,HH-99,HH-48,HH-67,HH-27,HH-92,HH-50,
HH-79,HH-32,HH-25,HH-44,HH-29,SC-9,HH-28,SC-12,HH-82,HH-58,
SP-10,HH-85,HH-41,HH-53,HH-40,HH-78,HH-34,HH-15,SP-0,SD-7,
HH-21,SC-3,SP-4,HH-98,HH-56,HH-84,SD-5,HH-24,HH-57,HH-77,
SP-6,HH-73,HH-93,HH-0,HH-4,HH-39,HH-83,HH-2,HH-69,HH-75,
HH-95,HH-61,SD-0,HH-51,HH-12,HH-23,HH-16,HH-60,HH-87,HH-3,
HH-76,HH-47,HH-81,HH-26,HH-59,SD-1,HH-65,SP-8,HH-10,HH-68,
HH-74,HH-46,HH-42,SP-2,SD-4,NO,HH-37,SD-2,HH-64,SC-6,
HH-6,HH-13,HH-14,HH-66,SC-0,HH-55,HH-80,HH-97,SD-6,HH-49,
HH-9,HH-91,SD-3,HH-45,HH-71,HH-36,HH-86,HH-94,HH-31,HH-18,

0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
Start run 4
HH-59,NO,HH-84,HH-58,HH-28,HH-87,HH-91,HH-16,HH-99,HH-11,
HH-6,SC-12,HH-62,HH-52,HH-22,HH-18,HH-90,HH-71,HH-0,HH-1,
HH-48,HH-74,HH-4,SC-3,HH-63,HH-89,HH-96,HH-55,SC-0,HH-65,
HH-92,HH-79,HH-2,SC-9,HH-23,HH-70,HH-13,HH-34,SP-8,HH-93,
HH-27,HH-31,HH-17,HH-66,HH-9,HH-45,HH-43,HH-20,HH-32,HH-25,
HH-49,HH-54,HH-85,HH-78,HH-46,HH-50,HH-5,HH-8,HH-29,SP-2,
HH-24,HH-51,HH-75,HH-53,HH-44,SD-7,SD-5,HH-95,HH-42,HH-35,
HH-76,SP-10,HH-72,HH-39,HH-82,HH-26,SP-6,HH-83,SP-0,HH-60,
HH-40,HH-30,HH-3,HH-67,HH-98,HH-64,HH-69,SC-6,HH-19,HH-15,
HH-94,HH-36,HH-86,HH-61,HH-81,HH-37,SD-1,HH-97,HH-33,HH-21,
SD-2,HH-7,HH-88,SD-0,SD-3,HH-14,HH-38,SD-6,HH-80,HH-10,
HH-47,HH-57,HH-68,SD-4,HH-56,HH-12,HH-73,HH-41,HH-77,SP-4,

0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
Start run 5
HH-73,HH-99,HH-48,HH-74,HH-29,HH-39,HH-15,SC-0,HH-77,SD-1,
HH-95,HH-5,HH-55,HH-58,HH-12,SP-4,HH-81,HH-47,HH-10,HH-54,
HH-68,HH-57,HH-33,HH-71,HH-78,HH-28,HH-76,HH-94,HH-65,HH-4,
SP-0,SP-6,HH-32,HH-30,SC-6,SC-9,HH-24,SD-7,HH-79,HH-9,
HH-98,HH-7,HH-49,HH-36,SD-5,HH-31,HH-82,HH-88,HH-52,HH-75,
HH-93,HH-70,HH-19,HH-92,HH-20,HH-51,HH-56,HH-34,HH-89,HH-22,
HH-91,HH-84,HH-61,SC-12,HH-21,SC-3,HH-1,HH-62,HH-40,HH-90,
HH-38,HH-23,HH-96,HH-97,HH-0,HH-26,HH-18,HH-37,SP-10,SD-4,
HH-11,HH-66,HH-2,HH-25,HH-63,SD-6,HH-41,HH-6,NO,HH-14,
HH-72,HH-67,HH-85,HH-44,HH-8,HH-59,HH-13,HH-27,HH-45,HH-3,
HH-42,HH-16,SP-8,HH-35,SD-3,HH-53,HH-86,SD-0,HH-69,HH-87,
HH-50,HH-43,HH-80,HH-60,HH-17,HH-83,SD-2,HH-46,SP-2,HH-64,

0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
Start run 6
HH-73,HH-43,HH-13,HH-68,HH-99,HH-8,HH-76,HH-17,HH-30,HH-1,
HH-24,SC-0,HH-2,HH-69,SD-4,HH-87,HH-19,HH-36,HH-65,SD-7,
HH-38,HH-14,HH-81,HH-50,HH-15,HH-55,HH-16,HH-94,HH-39,HH-53,
HH-25,HH-85,HH-28,SP-4,HH-31,HH-34,HH-62,HH-97,NO,SP-0,
HH-41,SD-2,HH-80,SC-3,HH-12,HH-59,HH-42,SD-5,SD-3,HH-91,
HH-84,HH-63,HH-47,HH-83,HH-90,HH-78,HH-86,HH-3,HH-33,SD-1,
HH-88,SC-6,HH-48,HH-37,HH-57,HH-98,HH-5,SC-12,HH-4,HH-61,
HH-0,SP-2,HH-22,SP-6,HH-49,HH-11,HH-82,HH-29,HH-54,SP-8,
HH-27,SP-10,HH-74,HH-64,HH-56,HH-96,HH-89,HH-67,HH-35,HH-66,
SC-9,HH-58,SD-6,HH-60,SD-0,HH-21,HH-45,HH-46,HH-20,HH-72,
HH-52,HH-7,HH-92,HH-70,HH-51,HH-6,HH-32,HH-18,HH-71,HH-75,
HH-93,HH-79,HH-23,HH-77,HH-9,HH-10,HH-40,HH-95,HH-26,HH-44,

0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
Start run 7
HH-71,HH-80,HH-98,SD-2,HH-48,HH-36,HH-24,HH-20,NO,HH-82,
HH-49,HH-28,HH-13,HH-50,HH-32,HH-91,HH-5,HH-59,HH-60,SD-5,
HH-23,HH-15,HH-96,HH-31,HH-27,HH-47,HH-25,HH-95,SP-6,HH-14,
HH-21,HH-85,HH-75,HH-39,HH-22,HH-94,HH-40,HH-73,HH-65,HH-69,
HH-77,SC-9,HH-3,SC-6,HH-37,HH-53,HH-66,HH-45,HH-33,HH-18,
HH-99,HH-44,HH-19,SD-0,HH-1,SP-0,HH-89,SC-3,HH-10,HH-64,
HH-42,HH-83,HH-57,HH-76,SP-4,HH-61,HH-54,HH-86,HH-26,SD-6,
HH-68,SD-3,HH-2,HH-56,HH-38,HH-43,HH-63,HH-16,HH-46,HH-97,
HH-12,HH-30,HH-41,HH-9,HH-17,HH-72,HH-7,HH-62,HH-74,HH-67,
HH-58,HH-70,HH-93,SP-2,HH-6,HH-4,SC-12,SD-4,SC-0,HH-87,
HH-34,HH-8,HH-11,HH-79,HH-35,HH-92,HH-52,HH-90,SD-1,SP-8,
SD-7,HH-0,HH-88,HH-78,HH-81,HH-51,HH-29,HH-55,SP-10,HH-84,

0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
Start run 8
HH-93,HH-81,HH-27,HH-51,HH-9,HH-70,SD-2,HH-54,HH-6,HH-26,
HH-72,HH-5,HH-47,SD-4,HH-90,HH-75,SD-0,HH-76,HH-66,HH-87,
HH-69,HH-15,SD-5,HH-18,HH-99,HH-91,SD-6,HH-78,HH-95,HH-63,
HH-92,HH-22,HH-10,HH-19,HH-68,HH-8,HH-82,HH-36,SC-6,HH-44,
HH-62,HH-84,HH-97,HH-48,HH-17,HH-23,HH-2,HH-24,HH-29,HH-34,
HH-98,HH-40,HH-35,HH-45,HH-61,HH-12,HH-41,HH-74,HH-77,SP-8,
HH-13,HH-7,HH-85,HH-33,SC-9,HH-83,HH-16,SD-7,SP-2,HH-60,
HH-80,SD-1,SP-6,HH-43,HH-28,HH-32,SP-0,HH-56,HH-49,HH-58,
HH-86,HH-38,SC-3,HH-65,HH-50,HH-79,HH-89,SD-3,HH-55,HH-67,
HH-46,HH-25,HH-53,HH-71,HH-52,HH-88,HH-73,HH-30,HH-1,HH-59,
HH-20,SC-12,HH-94,HH-57,SP-10,HH-37,HH-96,NO,HH-11,HH-39,
HH-14,HH-4,HH-31,HH-64,HH-0,SP-4,SC-0,HH-42,HH-21,HH-3,

0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
Start run 9
SD-0,HH-2,HH-10,HH-4,HH-53,HH-18,HH-70,HH-1,NO,HH-54,
HH-65,HH-69,SP-0,HH-81,HH-50,SD-1,HH-46,SD-6,HH-21,HH-74,
HH-33,HH-22,HH-36,HH-48,HH-72,HH-56,HH-40,HH-37,HH-8,HH-24,
HH-42,HH-98,HH-91,HH-29,SC-9,HH-85,HH-26,SD-3,HH-7,SP-10,
HH-90,HH-23,HH-34,HH-5,SD-5,HH-88,HH-71,HH-58,HH-16,SD-2,
HH-66,HH-38,HH-89,HH-43,HH-80,HH-84,HH-83,HH-61,HH-79,HH-92,
HH-35,HH-99,HH-44,HH-20,HH-68,HH-52,SP-4,HH-9,HH-57,HH-59,
HH-78,SP-8,HH-93,HH-64,HH-17,HH-12,SC-6,HH-87,HH-55,SP-2,
HH-94,SC-0,HH-41,HH-82,HH-73,HH-47,HH-76,HH-6,HH-49,SD-4,
HH-30,HH-96,HH-86,HH-14,HH-15,HH-31,HH-77,SC-12,HH-28,HH-45,
HH-0,HH-13,HH-62,SP-6,HH-67,HH-32,SC-3,HH-95,HH-19,HH-63,
HH-75,HH-39,HH-3,HH-97,SD-7,HH-60,HH-11,HH-51,HH-25,HH-27,

0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
Wed Jan 22 22:51:43 EST 2025
