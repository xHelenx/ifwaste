Starting experiment run
Mon Dec  9 13:15:21 EST 2024
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/config.json
/blue/carpena/haasehelen/ifwaste/model
Start run 0
/blue/carpena/haasehelen/ifwaste/model
HH-19,HH-15,NO,HH-44,HH-5,HH-39,HH-45,
HH-18,HH-13,HH-9,HH-10,HH-31,HH-28,HH-11,
HH-47,SC-3,HH-30,HH-7,HH-48,HH-34,HH-6,
HH-32,HH-1,HH-24,HH-16,HH-12,HH-3,HH-0,
HH-21,HH-4,HH-22,HH-2,HH-40,HH-20,SD-0,
HH-38,HH-49,HH-29,HH-17,SP-0,HH-27,HH-42,
SC-0,HH-35,HH-26,HH-14,HH-43,HH-41,HH-33,
HH-37,HH-36,HH-8,HH-25,HH-46,SD-1,HH-23,

0
1
2
3
4
Traceback (most recent call last):
  File "/blue/carpena/haasehelen/ifwaste/model/main.py", line 35, in <module>
    main(args.config_path)
  File "/blue/carpena/haasehelen/ifwaste/model/main.py", line 25, in main
    neighborhood.run(run_id=run)
  File "/blue/carpena/haasehelen/ifwaste/model/Neighborhood.py", line 66, in run
    house.do_a_day()
  File "/blue/carpena/haasehelen/ifwaste/model/Household.py", line 166, in do_a_day
    shopping_time = self.shoppingManager.shop(is_quickshop=False)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/blue/carpena/haasehelen/ifwaste/model/HouseholdShoppingManager.py", line 152, in shop
    store = self.choose_a_store(is_planner=is_planner, selected_store=selected_stores,required_fgs=relevant_fg)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/blue/carpena/haasehelen/ifwaste/model/HouseholdShoppingManager.py", line 249, in choose_a_store
    store_order = self._get_store_order(is_planner, required_fgs,store_options)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/blue/carpena/haasehelen/ifwaste/model/HouseholdShoppingManager.py", line 287, in _get_store_order
    local_deal = dealAssessor.assess_best_deals([store])
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/blue/carpena/haasehelen/ifwaste/model/DealAssessor.py", line 35, in assess_best_deals
    best_deals_df.loc[best_deals_df["type"] == fg,"deal_value"] = best_deal_this_fg["deal_value"]
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/blue/carpena/haasehelen/.conda/envs/ifwaste-env/lib/python3.12/site-packages/pandas/core/indexing.py", line 911, in __setitem__
    iloc._setitem_with_indexer(indexer, value, self.name)
  File "/blue/carpena/haasehelen/.conda/envs/ifwaste-env/lib/python3.12/site-packages/pandas/core/indexing.py", line 1942, in _setitem_with_indexer
    self._setitem_with_indexer_split_path(indexer, value, name)
  File "/blue/carpena/haasehelen/.conda/envs/ifwaste-env/lib/python3.12/site-packages/pandas/core/indexing.py", line 1963, in _setitem_with_indexer_split_path
    value = self._align_series(indexer, Series(value))
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/blue/carpena/haasehelen/.conda/envs/ifwaste-env/lib/python3.12/site-packages/pandas/core/indexing.py", line 2427, in _align_series
    return ser.reindex(new_ix)._values
           ^^^^^^^^^^^^^^^^^^^
  File "/blue/carpena/haasehelen/.conda/envs/ifwaste-env/lib/python3.12/site-packages/pandas/core/series.py", line 5153, in reindex
    return super().reindex(
           ^^^^^^^^^^^^^^^^
  File "/blue/carpena/haasehelen/.conda/envs/ifwaste-env/lib/python3.12/site-packages/pandas/core/generic.py", line 5610, in reindex
    return self._reindex_axes(
           ^^^^^^^^^^^^^^^^^^^
  File "/blue/carpena/haasehelen/.conda/envs/ifwaste-env/lib/python3.12/site-packages/pandas/core/generic.py", line 5633, in _reindex_axes
    new_index, indexer = ax.reindex(
                         ^^^^^^^^^^^
  File "/blue/carpena/haasehelen/.conda/envs/ifwaste-env/lib/python3.12/site-packages/pandas/core/indexes/base.py", line 4429, in reindex
    raise ValueError("cannot reindex on an axis with duplicate labels")
ValueError: cannot reindex on an axis with duplicate labels
Mon Dec  9 13:15:56 EST 2024
Finished runs
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/Store.py:131: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  self.stock = pd.concat([self.stock, pd.DataFrame([new_item])], ignore_index=True)
/blue/carpena/haasehelen/ifwaste/model/config.json
/blue/carpena/haasehelen/ifwaste/model
Start run 0
/blue/carpena/haasehelen/ifwaste/model
SC-0,HH-47,HH-6,HH-4,HH-37,HH-25,HH-46,
HH-42,HH-40,HH-22,HH-18,HH-3,HH-33,SD-1,
HH-10,HH-31,HH-11,HH-1,HH-15,HH-39,HH-26,
HH-28,HH-14,HH-9,HH-8,SC-3,HH-32,NO,
HH-30,HH-27,HH-12,HH-45,HH-43,SP-0,HH-36,
HH-21,HH-35,HH-34,HH-5,HH-44,HH-23,HH-41,
HH-29,HH-48,HH-20,HH-38,HH-0,HH-17,SD-0,
HH-13,HH-7,HH-49,HH-2,HH-24,HH-19,HH-16,

0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
Start run 1
HH-38,HH-0,SP-0,SC-3,HH-30,HH-37,HH-14,
HH-20,HH-10,HH-2,HH-3,HH-11,HH-23,HH-18,
HH-44,HH-1,HH-45,HH-39,HH-15,HH-43,HH-8,
HH-16,SD-1,HH-24,HH-33,HH-48,HH-12,HH-4,
HH-27,HH-31,HH-13,SD-0,HH-49,HH-41,HH-28,
HH-5,HH-26,SC-0,HH-9,HH-7,HH-36,NO,
HH-22,HH-21,HH-47,HH-25,HH-19,HH-42,HH-40,
HH-35,HH-32,HH-17,HH-46,HH-6,HH-29,HH-34,

0
1
2
3
4
5
6
7
8
Traceback (most recent call last):
  File "/blue/carpena/haasehelen/ifwaste/model/main.py", line 35, in <module>
    main(args.config_path)
  File "/blue/carpena/haasehelen/ifwaste/model/main.py", line 25, in main
    neighborhood.run(run_id=run)
  File "/blue/carpena/haasehelen/ifwaste/model/Neighborhood.py", line 66, in run
    house.do_a_day()
  File "/blue/carpena/haasehelen/ifwaste/model/Household.py", line 166, in do_a_day
    shopping_time = self.shoppingManager.shop(is_quickshop=False)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/blue/carpena/haasehelen/ifwaste/model/HouseholdShoppingManager.py", line 178, in shop
    self._handle_basket_adjustment(is_planner,basketCurator,selected_stores,budget, servings_to_buy_fg)                                            # type: ignore
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/blue/carpena/haasehelen/ifwaste/model/HouseholdShoppingManager.py", line 232, in _handle_basket_adjustment
    basketCurator.adjust_basket()
  File "/blue/carpena/haasehelen/ifwaste/model/BasketCurator.py", line 243, in adjust_basket
    self._organize_basket()
  File "/blue/carpena/haasehelen/ifwaste/model/BasketCurator.py", line 631, in _organize_basket
    self.basket["sale_type"] = self.basket["sale_type"].apply(lambda x: str(x))
                               ~~~~~~~~~~~^^^^^^^^^^^^^
  File "/blue/carpena/haasehelen/.conda/envs/ifwaste-env/lib/python3.12/site-packages/pandas/core/frame.py", line 4102, in __getitem__
    indexer = self.columns.get_loc(key)
              ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/blue/carpena/haasehelen/.conda/envs/ifwaste-env/lib/python3.12/site-packages/pandas/core/indexes/range.py", line 417, in get_loc
    raise KeyError(key)
KeyError: 'sale_type'
Mon Dec  9 14:21:06 EST 2024
Finished runs
